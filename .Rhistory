source('~/.active-rstudio-document', echo=TRUE)
library(variancePartition)
install.packages('easypackages')
rm(list = ls()) # clear the workspace
library(easypackages) # then we can do the rest in one go
# get a list of all potentially useful packages
list.of.packages <- c("Hmisc","ggplot2","caret","gplots","Rmisc","dplyr",
"MatchIt","optmatch","data.table","plotrix","ggthemes",
"viridis","coin","plyr","psytabs","RColorBrewer",
"msir","lmtest", "ggpubr","stats", "reshape2","xtable",
"ez","apa","parallel", "jmuOutlier","Rtsne","fpc", "cluster",
"RCurl")
# check if they are already installed and otherwise install them
# note: this doesn't work for biocLite tools
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) { install.packages(new.packages)}
# then load them all
libraries(list.of.packages)
rm(list.of.packages, new.packages)
install.packages("easypackages")
# set the working directory
setwd("~")
source("./Scripts/variancePart.R")
setwd("~/Dropbox/Research/Projects/MSN_ABIDE/Public/Normative_modeling/Scripts")
setwd("~/Dropbox/Research/Projects/MSN_ABIDE/Public/Normative_modeling")
source("./Scripts/variancePart.R")
source("./Scripts/1_MergingData.R")
source("./Scripts/2_localRegression.R")
source("./Scripts/3_Stats.R")
source("./Scripts/4_SymptomCorrelations.R")
mergeData(measure = "CT", parcellation = "500aparc")
source("./Scripts/variancePart.R")
source("./Scripts/1_MergingData.R")
source("./Scripts/2_localRegression.R")
source("./Scripts/3_Stats.R")
source("./Scripts/4_SymptomCorrelations.R")
mergeData(measure = "CT", parcellation = "500aparc")
install.packages('easypackages')
rm(list = ls()) # clear the workspace
library(easypackages) # then we can do the rest in one go
# get a list of all potentially useful packages
list.of.packages <- c("Hmisc","ggplot2","caret","gplots","Rmisc","dplyr",
"MatchIt","optmatch","data.table","plotrix","ggthemes",
"viridis","coin","plyr","psytabs","RColorBrewer",
"msir","lmtest", "ggpubr","stats", "reshape2","xtable",
"ez","apa","parallel", "jmuOutlier","Rtsne","fpc", "cluster",
"RCurl","plyr")
# check if they are already installed and otherwise install them
# note: this doesn't work for biocLite tools
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) { install.packages(new.packages)}
# then load them all
libraries(list.of.packages)
rm(list.of.packages, new.packages)
source("./Scripts/variancePart.R")
source("./Scripts/1_MergingData.R")
source("./Scripts/2_localRegression.R")
source("./Scripts/3_Stats.R")
source("./Scripts/4_SymptomCorrelations.R")
mergeData(measure = "CT", parcellation = "500aparc")
source("./Scripts/variancePart.R")
source("./Scripts/1_MergingData.R")
source("./Scripts/2_localRegression.R")
source("./Scripts/3_Stats.R")
source("./Scripts/4_SymptomCorrelations.R")
mergeData(measure = "CT", parcellation = "500aparc")
source("./Scripts/variancePart.R")
source("./Scripts/1_MergingData.R")
source("./Scripts/2_localRegression.R")
source("./Scripts/3_Stats.R")
source("./Scripts/4_SymptomCorrelations.R")
mergeData(measure = "CT", parcellation = "500aparc")
varianceStats(measure = "CT", parcellation = "500aparc")
load("~/Dropbox/Research/Projects/MSN_ABIDE/Public/Normative_modeling/Output_500aparc/CT_Age_IQ_Match/Matched_Age_IQ_CommonPheno.RData")
load("~/Dropbox/Research/Projects/MSN_ABIDE/Public/Normative_modeling/Output_500aparc/CT_Age_IQ_Match/Raw_CommonPheno.RData")
source("./Scripts/variancePart.R")
source("./Scripts/1_MergingData.R")
source("./Scripts/2_localRegression.R")
source("./Scripts/3_Stats.R")
source("./Scripts/4_SymptomCorrelations.R")
mergeData(measure = "CT", parcellation = "500aparc")
varianceStats(measure = "CT", parcellation = "500aparc")
localRegression(measure = "CT", parcellation = "500aparc")
basicStats(measure = "CT", parcellation = "500aparc")
install.packages('easypackages')
rm(list = ls()) # clear the workspace
library(easypackages) # then we can do the rest in one go
# get a list of all potentially useful packages
list.of.packages <- c("Hmisc","ggplot2","caret","gplots","Rmisc","dplyr",
"MatchIt","optmatch","data.table","plotrix","ggthemes",
"viridis","coin","plyr","psytabs","RColorBrewer",
"msir","lmtest", "ggpubr","stats", "reshape2","xtable",
"ez","apa","parallel", "jmuOutlier","Rtsne","fpc", "cluster",
"RCurl","plyr","nlme")
# check if they are already installed and otherwise install them
# note: this doesn't work for biocLite tools
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) { install.packages(new.packages)}
# then load them all
libraries(list.of.packages)
rm(list.of.packages, new.packages)
install.packages("easypackages")
source("./Scripts/variancePart.R")
source("./Scripts/1_MergingData.R")
source("./Scripts/2_localRegression.R")
source("./Scripts/3_Stats.R")
source("./Scripts/4_SymptomCorrelations.R")
basicStats(measure = "CT", parcellation = "500aparc")
install.packages('easypackages')
rm(list = ls()) # clear the workspace
library(easypackages) # then we can do the rest in one go
# get a list of all potentially useful packages
list.of.packages <- c("Hmisc","ggplot2","caret","gplots","Rmisc","dplyr",
"MatchIt","optmatch","data.table","plotrix","ggthemes",
"viridis","coin","plyr","psytabs","RColorBrewer",
"msir","lmtest", "ggpubr","stats", "reshape2","xtable",
"ez","apa","parallel", "jmuOutlier","Rtsne","fpc", "cluster",
"RCurl","plyr","nlme")
# check if they are already installed and otherwise install them
# note: this doesn't work for biocLite tools
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) { install.packages(new.packages)}
# then load them all
libraries(list.of.packages)
rm(list.of.packages, new.packages)
source("./Scripts/variancePart.R")
source("./Scripts/1_MergingData.R")
source("./Scripts/2_localRegression.R")
source("./Scripts/3_Stats.R")
source("./Scripts/4_SymptomCorrelations.R")
basicStats(measure = "CT", parcellation = "500aparc")
